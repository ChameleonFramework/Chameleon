#!/bin/sh
#
# This file is a part of the Chameleon Framework, licensed under the MIT License.
#
# Copyright (c) 2021-2023 The Chameleon Framework Authors.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

# Chameleon release automation script
# This script releases the current version of Chameleon.
#
# Usage: NEXT_VERSION=x.x.x release
#
# This script is used by the maintainers to create release versions of Chameleon.
# Users and contributors will not need to use this script.
#
# This script assumes that you have a ChameleonFramework/Chameleon repository remote
# with the name "origin".

# Make sure NEXT_VERSION is set
if [ x"$NEXT_VERSION" = "x" ]; then
  echo "NEXT_VERSION must be set"
  exit 1
fi

# Checkout main and check up-to-date
git checkout main
git pull origin main

# Remove '-SNAPSHOT' from version
VERSION="$(grep -oP '(?<=version = \").*(?=-SNAPSHOT\")' build.gradle.kts)"
sed -i "s/$VERSION-SNAPSHOT/$VERSION/g" build.gradle.kts

# Create release commit and push to release branch
git commit -am "release: $VERSION"
VERSION_MAJOR="$(echo "$VERSION" | awk '{split($0,v,"."); print v[1]}')"
git push origin "main:releases/$VERSION_MAJOR"

# Bump version to the next version
sed -i "s/$VERSION/$NEXT_VERSION-SNAPSHOT/g" build.gradle.kts

# Commit and push to main branch
git commit -am "chore: bump version to $NEXT_VERSION-SNAPSHOT"
git push origin main
