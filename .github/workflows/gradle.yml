# GitHub Action workflow to run Gradle tasks.
name: "Gradle"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "25 6 * * 5"

concurrency:
  group: "${{ github.workflow }}-${{ github.event.number || github.ref }}"
  cancel-in-progress: true

env:
  JAVA_VERSION: 18

jobs:
  validate:
    name: "Validate"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Validate Gradle wrapper"
        uses: gradle/wrapper-validation-action@v1

  build:
    name: "Build"
    runs-on: "ubuntu-latest"
    needs: "validate"
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Initialize CodeQL"
        uses: github/codeql-action/init@v2
        with:
          languages: "java"

      - name: "Set up JDK ${{ env.JAVA_VERSION }}"
        uses: actions/setup-java@v3
        with:
          java-version: "${{ env.JAVA_VERSION }}"
          distribution: "adopt"

      - name: "Build"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "build"

      - name: "Upload reports"
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: "${{ runner.os }}-test-reports"
          retention-days: 7
          if-no-files-found: ignore
          path: |
            **/build/reports/tests/test/
            **/build/reports/checkstyle/
            **/build/reports/jacoco/

      - name: "Perform CodeQL Analysis"
        uses: github/codeql-action/analyze@v2

  publish:
    name: "Publish"
    if: "${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}"
    runs-on: "ubuntu-latest"
    needs: "validate"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"

      - name: "Set up JDK ${{ env.JAVA_VERSION }}"
        uses: actions/setup-java@v3
        with:
          java-version: "${{ env.JAVA_VERSION }}"
          distribution: "adopt"

      - name: "Determine version"
        run: |
          echo "VERSION=$(./gradlew properties | awk '/^version:/ { print $2; }')" >> $GITHUB_ENV

      - name: "Create release"
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "v${{ env.VERSION }}"
          prerelease: "${{ endsWith(env.VERSION, 'SNAPSHOT') }}"
          title: "Chameleon v${{ env.VERSION }}"

      - name: "Import GPG key"
        uses: crazy-max/ghaction-import-gpg@v5.2.0
        with:
          gpg_private_key: "${{ secrets.GPG_PRIVATE_KEY }}"

      - name: "Publish"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: "publish"
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: "${{ secrets.SONATYPE_USERNAME }}"
          ORG_GRADLE_PROJECT_sonatypePassword: "${{ secrets.SONATYPE_PASSWORD }}"
          ORG_GRADLE_PROJECT_hyperaReleasesUsername: "${{ secrets.HYPERA_RELEASES_USERNAME }}"
          ORG_GRADLE_PROJECT_hyperaReleasesPassword: "${{ secrets.HYPERA_RELEASES_PASSWORD }}"
          ORG_GRADLE_PROJECT_hyperaSnapshotsUsername: "${{ secrets.HYPERA_SNAPSHOTS_USERNAME }}"
          ORG_GRADLE_PROJECT_hyperaSnapshotsPassword: "${{ secrets.HYPERA_SNAPSHOTS_PASSWORD }}"