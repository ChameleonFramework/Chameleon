[metadata]
version = "1.0"

[versions]
# Adventure
adventure = "4.16.0"
adventure-platform = "4.3.2"

# Platforms
bukkit = "1.20.2-R0.1-SNAPSHOT"
bungeecord = "1.20-R0.3-SNAPSHOT"
nukkit = "1.0-SNAPSHOT"
sponge = "10.0.0"
velocity = "3.2.0-SNAPSHOT"

# File formats
gson = "2.10.1"
yaml = "2.2"

# Code generation
javapoet = "1.13.0"

# Logging
slf4j = "2.0.12"
log4j = "2.23.0"

# Code safety
annotations = "24.1.0"

# Build
indra = "3.1.3"
test-logger = "4.0.0"
checkstyle = "10.14.0"
errorprone = "2.25.0"
errorprone-plugin = "3.1.0"
nullaway = "0.10.23"
nullaway-plugin = "2.0.0"
nexusPublish = "2.0.0-rc-2"

# Test
junit = "5.10.2"
truth = "1.4.2"
guava-testlib = "33.0.0-jre"
mockito = "5.11.0"


[libraries]
# Adventure
adventure-api = { module = "net.kyori:adventure-api", version.ref = "adventure" }
adventure-textSerializer-legacy = { module = "net.kyori:adventure-text-serializer-legacy", version.ref = "adventure" }
adventure-textSerializer-gson = { module = "net.kyori:adventure-text-serializer-gson", version.ref = "adventure" }
adventure-platform-api = { module = "net.kyori:adventure-platform-api", version.ref = "adventure-platform" }
adventure-platform-bukkit = { module = "net.kyori:adventure-platform-bukkit", version.ref = "adventure-platform" }
adventure-platform-bungeecord = { module = "net.kyori:adventure-platform-bungeecord", version.ref = "adventure-platform" }

# Platforms
platform-bukkit = { module = "io.papermc.paper:paper-api", version.ref = "bukkit" }
platform-bungeecord = { module = "net.md-5:bungeecord-api", version.ref = "bungeecord" }
platform-nukkit = { module = "cn.nukkit:nukkit", version.ref = "nukkit" }
platform-sponge = { module = "org.spongepowered:spongeapi", version.ref = "sponge" }
platform-velocity = { module = "com.velocitypowered:velocity-api", version.ref = "velocity" }

# File formats
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
yaml = { module = "org.yaml:snakeyaml", version.ref = "yaml" }

# Code generation
javapoet = { module = "com.squareup:javapoet", version.ref = "javapoet" }

# Logging
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
log4j = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }

# Code safety
annotations = { module = "org.jetbrains:annotations", version.ref = "annotations" }

# Build
build-indra-common = { module = "net.kyori:indra-common", version.ref = "indra" }
build-indra-publishing = { module = "net.kyori:indra-publishing-gradle-plugin", version.ref = "indra" }
build-indra-licenser-spotless = { module = "net.kyori:indra-licenser-spotless", version.ref = "indra" }
build-test-logger = { module = "com.adarshr:gradle-test-logger-plugin", version.ref = "test-logger" }
build-errorprone-plugin = { module = "net.ltgt.gradle:gradle-errorprone-plugin", version.ref = "errorprone-plugin" }
build-errorprone-core = { module = "com.google.errorprone:error_prone_core", version.ref = "errorprone" }
build-errorprone-annotations = { module = "com.google.errorprone:error_prone_annotations", version.ref = "errorprone" }
build-nullaway-plugin = { module = "net.ltgt.gradle:gradle-nullaway-plugin", version.ref = "nullaway-plugin" }
build-nullaway-core = { module = "com.uber.nullaway:nullaway", version.ref = "nullaway" }
# Unused (Renovate)
u-build-checkstyle = { module = "com.puppycrawl.tools:checkstyle", version.ref = "checkstyle" }

# Test
test-junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
test-junit-api = { module = "org.junit.jupiter:junit-jupiter-api" }
test-junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
test-junit-params = { module = "org.junit.jupiter:junit-jupiter-params" }
test-junit-launcher = { module = "org.junit.platform:junit-platform-launcher" }
test-truth = { module = "com.google.truth:truth", version.ref = "truth" }
test-guava-testlib = { module = "com.google.guava:guava-testlib", version.ref = "guava-testlib" }
test-mockito-bom = { module = "org.mockito:mockito-bom", version.ref = "mockito" }
test-mockito-core = { module = "org.mockito:mockito-core" }
test-mockito-junit = { module = "org.mockito:mockito-junit-jupiter" }

[plugins]
indra-sonatype = { id = "net.kyori.indra.publishing.sonatype", version.ref = "indra" }
nexusPublish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexusPublish" }
